Terminals unused in grammar

   FUNCTION
   END
   RETURN
   INT
   DOT
   NOT
   CONNECT
   LENGHT
   INCLUDEPROPERTY
   PROPERTY
   VERTEX
   DIRECTED
   UNDIRECTED
   EDGE
   SPACE
   NEWLINE
   AND
   OR
   EQUAL
   PLUS
   MINUS
   MULTIPLICATION
   DIVISION


Grammar

    0 $accept: entry $end

    1 entry: MAIN LPARAN RPARAN LBRACKET functionbody RBRACKET

    2 functionbody: stmt functionbody
    3             | stmt

    4 stmt: predicate_declaration end
    5     | filter_declaration end
    6     | query_declaration end
    7     | assignment end
    8     | exec_function end
    9     | conditional
   10     | loop
   11     | COMMENT

   12 exec_function: EXEC LPARAN VARIABLE COMMA VARIABLE RPARAN

   13 query_declaration: QUERY VARIABLE ASSIGNMENT query_tail QUERY VARIABLE ASSIGNMENT filter_tail

   14 filter_declaration: FILTER VARIABLE ASSIGNMENT filter_tail
   15                   | FILTER VARIABLE ASSIGNMENT predicate_tail

   16 predicate_declaration: PREDICATE p_identifier ASSIGNMENT HASH method
   17                      | PREDICATE p_identifier ASSIGNMENT DOLAR method
   18                      | PREDICATE VARIABLE ASSIGNMENT DOLAR method
   19                      | PREDICATE VARIABLE ASSIGNMENT HASH method

   20 query_tail: query_tail ALTERNATION q_stmt
   21           | q_stmt

   22 filter_tail: filter_tail ALTERNATION f_stmt
   23            | f_stmt

   24 predicate_tail: predicate_tail ALTERNATION p_stmt
   25               | p_stmt

   26 q_stmt: q_stmt CONCATENATION q_factor
   27       | q_factor

   28 f_stmt: f_stmt CONCATENATION f_factor
   29       | f_factor

   30 p_stmt: p_stmt CONCATENATION p_factor
   31       | p_factor

   32 q_factor: q_factor REPETITION
   33         | q_expr

   34 f_factor: %empty
   35         | f_factor REPETITION
   36         | f_expr

   37 p_factor: p_factor REPETITION
   38         | p_expr

   39 q_expr: LPARAN query_tail RPARAN
   40       | VARIABLE

   41 f_expr: LPARAN filter_tail RPARAN
   42       | VARIABLE

   43 p_expr: LPARAN predicate_tail RPARAN
   44       | p_identifier

   45 p_identifier: RANDVERTEX
   46             | RANDEDGE

   47 method: EQUALSM LPARAN STRING COMMA element RPARAN
   48       | LESSTHANM LPARAN STRING COMMA INTEGER RPARAN
   49       | LESSTHANM LPARAN STRING COMMA FLOAT RPARAN
   50       | MORETHANM LPARAN STRING COMMA INTEGER RPARAN
   51       | MORETHANM LPARAN STRING COMMA FLOAT RPARAN
   52       | CHARATM LPARAN STRING COMMA INTEGER COMMA STRING RPARAN
   53       | LENGTHM LPARAN STRING COMMA INTEGER RPARAN

   54 assignment: %empty
   55           | VARIABLE ASSIGNMENT element

   56 conditional: if_cond
   57            | ifelse_cond

   58 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET

   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET

   60 cond: %empty
   61     | BOOLEAN
   62     | VARIABLE booleanopr element
   63     | element booleanopr VARIABLE
   64     | VARIABLE booleanopr VARIABLE

   65 booleanopr: ISEQUAL
   66           | GREATER
   67           | LESS
   68           | GREATEREQUAL
   69           | LESSEQUAL
   70           | NOTEQUAL

   71 loop: for
   72     | while

   73 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET functionbody RBRACKET

   74 while: WHILE LPARAN cond RPARAN LBRACKET functionbody RBRACKET

   75 element: INTEGER
   76        | FLOAT
   77        | STRING
   78        | map
   79        | set

   80 map: LBRACKET mapbody RBRACKET

   81 set: SLBRACKET setbody SRBRACKET

   82 mapbody: mapbody COMMA map_tail
   83        | map_tail
   84        | %empty

   85 map_tail: STRING COLON element

   86 setbody: element COMMA setbody
   87        | element

   88 end: SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
COLON (258) 85
EXEC (259) 12
FILTER (260) 14 15
LENGTHM (261) 53
PREDICATE (262) 16 17 18 19
QUERY (263) 13
RANDEDGE (264) 46
RANDVERTEX (265) 45
LESSTHANM (266) 48 49
MORETHANM (267) 50 51
FUNCTION (268)
IFSTATEMENT (269) 58 59
ELSESTATEMENT (270) 59
END (271)
FOR (272) 73
WHILE (273) 74
RETURN (274)
COMMENT (275) 11
INT (276)
FLOAT (277) 49 51 76
STRING (278) 47 48 49 50 51 52 53 77 85
SEMICOLON (279) 73 88
COMMA (280) 12 47 48 49 50 51 52 53 82 86
DOT (281)
SLBRACKET (282) 81
SRBRACKET (283) 81
NOT (284)
ASSIGNMENT (285) 13 14 15 16 17 18 19 55
CONNECT (286)
DOLAR (287) 17 18
HASH (288) 16 19
LENGHT (289)
INCLUDEPROPERTY (290)
MAIN (291) 1
PROPERTY (292)
VARIABLE (293) 12 13 14 15 18 19 40 42 55 62 63 64
VERTEX (294)
BOOLEAN (295) 61
CHARATM (296) 52
EQUALSM (297) 47
DIRECTED (298)
UNDIRECTED (299)
EDGE (300)
LPARAN (301) 1 12 39 41 43 47 48 49 50 51 52 53 58 59 73 74
RPARAN (302) 1 12 39 41 43 47 48 49 50 51 52 53 58 59 73 74
LBRACKET (303) 1 58 59 73 74 80
RBRACKET (304) 1 58 59 73 74 80
INTEGER (305) 48 50 52 53 75
CONCATENATION (306) 26 28 30
ALTERNATION (307) 20 22 24
REPETITION (308) 32 35 37
SPACE (309)
NEWLINE (310)
AND (311)
OR (312)
LESS (313) 67
GREATER (314) 66
LESSEQUAL (315) 69
GREATEREQUAL (316) 68
ISEQUAL (317) 65
NOTEQUAL (318) 70
EQUAL (319)
PLUS (320)
MINUS (321)
MULTIPLICATION (322)
DIVISION (323)


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
entry (70)
    on left: 1, on right: 0
functionbody (71)
    on left: 2 3, on right: 1 2 58 59 73 74
stmt (72)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
exec_function (73)
    on left: 12, on right: 8
query_declaration (74)
    on left: 13, on right: 6
filter_declaration (75)
    on left: 14 15, on right: 5
predicate_declaration (76)
    on left: 16 17 18 19, on right: 4
query_tail (77)
    on left: 20 21, on right: 13 20 39
filter_tail (78)
    on left: 22 23, on right: 13 14 22 41
predicate_tail (79)
    on left: 24 25, on right: 15 24 43
q_stmt (80)
    on left: 26 27, on right: 20 21 26
f_stmt (81)
    on left: 28 29, on right: 22 23 28
p_stmt (82)
    on left: 30 31, on right: 24 25 30
q_factor (83)
    on left: 32 33, on right: 26 27 32
f_factor (84)
    on left: 34 35 36, on right: 28 29 35
p_factor (85)
    on left: 37 38, on right: 30 31 37
q_expr (86)
    on left: 39 40, on right: 33
f_expr (87)
    on left: 41 42, on right: 36
p_expr (88)
    on left: 43 44, on right: 38
p_identifier (89)
    on left: 45 46, on right: 16 17 44
method (90)
    on left: 47 48 49 50 51 52 53, on right: 16 17 18 19
assignment (91)
    on left: 54 55, on right: 7 73
conditional (92)
    on left: 56 57, on right: 9
if_cond (93)
    on left: 58, on right: 56
ifelse_cond (94)
    on left: 59, on right: 57
cond (95)
    on left: 60 61 62 63 64, on right: 58 59 73 74
booleanopr (96)
    on left: 65 66 67 68 69 70, on right: 62 63 64
loop (97)
    on left: 71 72, on right: 10
for (98)
    on left: 73, on right: 71
while (99)
    on left: 74, on right: 72
element (100)
    on left: 75 76 77 78 79, on right: 47 55 62 63 85 86 87
map (101)
    on left: 80, on right: 78
set (102)
    on left: 81, on right: 79
mapbody (103)
    on left: 82 83 84, on right: 80 82
map_tail (104)
    on left: 85, on right: 82 83
setbody (105)
    on left: 86 87, on right: 81 86
end (106)
    on left: 88, on right: 4 5 6 7 8


State 0

    0 $accept: . entry $end

    MAIN  shift, and go to state 1

    entry  go to state 2


State 1

    1 entry: MAIN . LPARAN RPARAN LBRACKET functionbody RBRACKET

    LPARAN  shift, and go to state 3


State 2

    0 $accept: entry . $end

    $end  shift, and go to state 4


State 3

    1 entry: MAIN LPARAN . RPARAN LBRACKET functionbody RBRACKET

    RPARAN  shift, and go to state 5


State 4

    0 $accept: entry $end .

    $default  accept


State 5

    1 entry: MAIN LPARAN RPARAN . LBRACKET functionbody RBRACKET

    LBRACKET  shift, and go to state 6


State 6

    1 entry: MAIN LPARAN RPARAN LBRACKET . functionbody RBRACKET

    EXEC         shift, and go to state 7
    FILTER       shift, and go to state 8
    PREDICATE    shift, and go to state 9
    QUERY        shift, and go to state 10
    IFSTATEMENT  shift, and go to state 11
    FOR          shift, and go to state 12
    WHILE        shift, and go to state 13
    COMMENT      shift, and go to state 14
    VARIABLE     shift, and go to state 15

    $default  reduce using rule 54 (assignment)

    functionbody           go to state 16
    stmt                   go to state 17
    exec_function          go to state 18
    query_declaration      go to state 19
    filter_declaration     go to state 20
    predicate_declaration  go to state 21
    assignment             go to state 22
    conditional            go to state 23
    if_cond                go to state 24
    ifelse_cond            go to state 25
    loop                   go to state 26
    for                    go to state 27
    while                  go to state 28


State 7

   12 exec_function: EXEC . LPARAN VARIABLE COMMA VARIABLE RPARAN

    LPARAN  shift, and go to state 29


State 8

   14 filter_declaration: FILTER . VARIABLE ASSIGNMENT filter_tail
   15                   | FILTER . VARIABLE ASSIGNMENT predicate_tail

    VARIABLE  shift, and go to state 30


State 9

   16 predicate_declaration: PREDICATE . p_identifier ASSIGNMENT HASH method
   17                      | PREDICATE . p_identifier ASSIGNMENT DOLAR method
   18                      | PREDICATE . VARIABLE ASSIGNMENT DOLAR method
   19                      | PREDICATE . VARIABLE ASSIGNMENT HASH method

    RANDEDGE    shift, and go to state 31
    RANDVERTEX  shift, and go to state 32
    VARIABLE    shift, and go to state 33

    p_identifier  go to state 34


State 10

   13 query_declaration: QUERY . VARIABLE ASSIGNMENT query_tail QUERY VARIABLE ASSIGNMENT filter_tail

    VARIABLE  shift, and go to state 35


State 11

   58 if_cond: IFSTATEMENT . LPARAN cond RPARAN LBRACKET functionbody RBRACKET
   59 ifelse_cond: IFSTATEMENT . LPARAN cond RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET

    LPARAN  shift, and go to state 36


State 12

   73 for: FOR . LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET functionbody RBRACKET

    LPARAN  shift, and go to state 37


State 13

   74 while: WHILE . LPARAN cond RPARAN LBRACKET functionbody RBRACKET

    LPARAN  shift, and go to state 38


State 14

   11 stmt: COMMENT .

    $default  reduce using rule 11 (stmt)


State 15

   55 assignment: VARIABLE . ASSIGNMENT element

    ASSIGNMENT  shift, and go to state 39


State 16

    1 entry: MAIN LPARAN RPARAN LBRACKET functionbody . RBRACKET

    RBRACKET  shift, and go to state 40


State 17

    2 functionbody: stmt . functionbody
    3             | stmt .

    EXEC         shift, and go to state 7
    FILTER       shift, and go to state 8
    PREDICATE    shift, and go to state 9
    QUERY        shift, and go to state 10
    IFSTATEMENT  shift, and go to state 11
    FOR          shift, and go to state 12
    WHILE        shift, and go to state 13
    COMMENT      shift, and go to state 14
    VARIABLE     shift, and go to state 15

    SEMICOLON  reduce using rule 54 (assignment)
    $default   reduce using rule 3 (functionbody)

    functionbody           go to state 41
    stmt                   go to state 17
    exec_function          go to state 18
    query_declaration      go to state 19
    filter_declaration     go to state 20
    predicate_declaration  go to state 21
    assignment             go to state 22
    conditional            go to state 23
    if_cond                go to state 24
    ifelse_cond            go to state 25
    loop                   go to state 26
    for                    go to state 27
    while                  go to state 28


State 18

    8 stmt: exec_function . end

    SEMICOLON  shift, and go to state 42

    end  go to state 43


State 19

    6 stmt: query_declaration . end

    SEMICOLON  shift, and go to state 42

    end  go to state 44


State 20

    5 stmt: filter_declaration . end

    SEMICOLON  shift, and go to state 42

    end  go to state 45


State 21

    4 stmt: predicate_declaration . end

    SEMICOLON  shift, and go to state 42

    end  go to state 46


State 22

    7 stmt: assignment . end

    SEMICOLON  shift, and go to state 42

    end  go to state 47


State 23

    9 stmt: conditional .

    $default  reduce using rule 9 (stmt)


State 24

   56 conditional: if_cond .

    $default  reduce using rule 56 (conditional)


State 25

   57 conditional: ifelse_cond .

    $default  reduce using rule 57 (conditional)


State 26

   10 stmt: loop .

    $default  reduce using rule 10 (stmt)


State 27

   71 loop: for .

    $default  reduce using rule 71 (loop)


State 28

   72 loop: while .

    $default  reduce using rule 72 (loop)


State 29

   12 exec_function: EXEC LPARAN . VARIABLE COMMA VARIABLE RPARAN

    VARIABLE  shift, and go to state 48


State 30

   14 filter_declaration: FILTER VARIABLE . ASSIGNMENT filter_tail
   15                   | FILTER VARIABLE . ASSIGNMENT predicate_tail

    ASSIGNMENT  shift, and go to state 49


State 31

   46 p_identifier: RANDEDGE .

    $default  reduce using rule 46 (p_identifier)


State 32

   45 p_identifier: RANDVERTEX .

    $default  reduce using rule 45 (p_identifier)


State 33

   18 predicate_declaration: PREDICATE VARIABLE . ASSIGNMENT DOLAR method
   19                      | PREDICATE VARIABLE . ASSIGNMENT HASH method

    ASSIGNMENT  shift, and go to state 50


State 34

   16 predicate_declaration: PREDICATE p_identifier . ASSIGNMENT HASH method
   17                      | PREDICATE p_identifier . ASSIGNMENT DOLAR method

    ASSIGNMENT  shift, and go to state 51


State 35

   13 query_declaration: QUERY VARIABLE . ASSIGNMENT query_tail QUERY VARIABLE ASSIGNMENT filter_tail

    ASSIGNMENT  shift, and go to state 52


State 36

   58 if_cond: IFSTATEMENT LPARAN . cond RPARAN LBRACKET functionbody RBRACKET
   59 ifelse_cond: IFSTATEMENT LPARAN . cond RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    VARIABLE   shift, and go to state 56
    BOOLEAN    shift, and go to state 57
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    $default  reduce using rule 60 (cond)

    cond     go to state 60
    element  go to state 61
    map      go to state 62
    set      go to state 63


State 37

   73 for: FOR LPARAN . assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET functionbody RBRACKET

    VARIABLE  shift, and go to state 15

    $default  reduce using rule 54 (assignment)

    assignment  go to state 64


State 38

   74 while: WHILE LPARAN . cond RPARAN LBRACKET functionbody RBRACKET

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    VARIABLE   shift, and go to state 56
    BOOLEAN    shift, and go to state 57
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    $default  reduce using rule 60 (cond)

    cond     go to state 65
    element  go to state 61
    map      go to state 62
    set      go to state 63


State 39

   55 assignment: VARIABLE ASSIGNMENT . element

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    element  go to state 66
    map      go to state 62
    set      go to state 63


State 40

    1 entry: MAIN LPARAN RPARAN LBRACKET functionbody RBRACKET .

    $default  reduce using rule 1 (entry)


State 41

    2 functionbody: stmt functionbody .

    $default  reduce using rule 2 (functionbody)


State 42

   88 end: SEMICOLON .

    $default  reduce using rule 88 (end)


State 43

    8 stmt: exec_function end .

    $default  reduce using rule 8 (stmt)


State 44

    6 stmt: query_declaration end .

    $default  reduce using rule 6 (stmt)


State 45

    5 stmt: filter_declaration end .

    $default  reduce using rule 5 (stmt)


State 46

    4 stmt: predicate_declaration end .

    $default  reduce using rule 4 (stmt)


State 47

    7 stmt: assignment end .

    $default  reduce using rule 7 (stmt)


State 48

   12 exec_function: EXEC LPARAN VARIABLE . COMMA VARIABLE RPARAN

    COMMA  shift, and go to state 67


State 49

   14 filter_declaration: FILTER VARIABLE ASSIGNMENT . filter_tail
   15                   | FILTER VARIABLE ASSIGNMENT . predicate_tail

    RANDEDGE    shift, and go to state 31
    RANDVERTEX  shift, and go to state 32
    VARIABLE    shift, and go to state 68
    LPARAN      shift, and go to state 69

    $default  reduce using rule 34 (f_factor)

    filter_tail     go to state 70
    predicate_tail  go to state 71
    f_stmt          go to state 72
    p_stmt          go to state 73
    f_factor        go to state 74
    p_factor        go to state 75
    f_expr          go to state 76
    p_expr          go to state 77
    p_identifier    go to state 78


State 50

   18 predicate_declaration: PREDICATE VARIABLE ASSIGNMENT . DOLAR method
   19                      | PREDICATE VARIABLE ASSIGNMENT . HASH method

    DOLAR  shift, and go to state 79
    HASH   shift, and go to state 80


State 51

   16 predicate_declaration: PREDICATE p_identifier ASSIGNMENT . HASH method
   17                      | PREDICATE p_identifier ASSIGNMENT . DOLAR method

    DOLAR  shift, and go to state 81
    HASH   shift, and go to state 82


State 52

   13 query_declaration: QUERY VARIABLE ASSIGNMENT . query_tail QUERY VARIABLE ASSIGNMENT filter_tail

    VARIABLE  shift, and go to state 83
    LPARAN    shift, and go to state 84

    query_tail  go to state 85
    q_stmt      go to state 86
    q_factor    go to state 87
    q_expr      go to state 88


State 53

   76 element: FLOAT .

    $default  reduce using rule 76 (element)


State 54

   77 element: STRING .

    $default  reduce using rule 77 (element)


State 55

   81 set: SLBRACKET . setbody SRBRACKET

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    element  go to state 89
    map      go to state 62
    set      go to state 63
    setbody  go to state 90


State 56

   62 cond: VARIABLE . booleanopr element
   64     | VARIABLE . booleanopr VARIABLE

    LESS          shift, and go to state 91
    GREATER       shift, and go to state 92
    LESSEQUAL     shift, and go to state 93
    GREATEREQUAL  shift, and go to state 94
    ISEQUAL       shift, and go to state 95
    NOTEQUAL      shift, and go to state 96

    booleanopr  go to state 97


State 57

   61 cond: BOOLEAN .

    $default  reduce using rule 61 (cond)


State 58

   80 map: LBRACKET . mapbody RBRACKET

    STRING  shift, and go to state 98

    $default  reduce using rule 84 (mapbody)

    mapbody   go to state 99
    map_tail  go to state 100


State 59

   75 element: INTEGER .

    $default  reduce using rule 75 (element)


State 60

   58 if_cond: IFSTATEMENT LPARAN cond . RPARAN LBRACKET functionbody RBRACKET
   59 ifelse_cond: IFSTATEMENT LPARAN cond . RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET

    RPARAN  shift, and go to state 101


State 61

   63 cond: element . booleanopr VARIABLE

    LESS          shift, and go to state 91
    GREATER       shift, and go to state 92
    LESSEQUAL     shift, and go to state 93
    GREATEREQUAL  shift, and go to state 94
    ISEQUAL       shift, and go to state 95
    NOTEQUAL      shift, and go to state 96

    booleanopr  go to state 102


State 62

   78 element: map .

    $default  reduce using rule 78 (element)


State 63

   79 element: set .

    $default  reduce using rule 79 (element)


State 64

   73 for: FOR LPARAN assignment . SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET functionbody RBRACKET

    SEMICOLON  shift, and go to state 103


State 65

   74 while: WHILE LPARAN cond . RPARAN LBRACKET functionbody RBRACKET

    RPARAN  shift, and go to state 104


State 66

   55 assignment: VARIABLE ASSIGNMENT element .

    $default  reduce using rule 55 (assignment)


State 67

   12 exec_function: EXEC LPARAN VARIABLE COMMA . VARIABLE RPARAN

    VARIABLE  shift, and go to state 105


State 68

   42 f_expr: VARIABLE .

    $default  reduce using rule 42 (f_expr)


State 69

   41 f_expr: LPARAN . filter_tail RPARAN
   43 p_expr: LPARAN . predicate_tail RPARAN

    RANDEDGE    shift, and go to state 31
    RANDVERTEX  shift, and go to state 32
    VARIABLE    shift, and go to state 68
    LPARAN      shift, and go to state 69

    $default  reduce using rule 34 (f_factor)

    filter_tail     go to state 106
    predicate_tail  go to state 107
    f_stmt          go to state 72
    p_stmt          go to state 73
    f_factor        go to state 74
    p_factor        go to state 75
    f_expr          go to state 76
    p_expr          go to state 77
    p_identifier    go to state 78


State 70

   14 filter_declaration: FILTER VARIABLE ASSIGNMENT filter_tail .
   22 filter_tail: filter_tail . ALTERNATION f_stmt

    ALTERNATION  shift, and go to state 108

    $default  reduce using rule 14 (filter_declaration)


State 71

   15 filter_declaration: FILTER VARIABLE ASSIGNMENT predicate_tail .
   24 predicate_tail: predicate_tail . ALTERNATION p_stmt

    ALTERNATION  shift, and go to state 109

    $default  reduce using rule 15 (filter_declaration)


State 72

   23 filter_tail: f_stmt .
   28 f_stmt: f_stmt . CONCATENATION f_factor

    CONCATENATION  shift, and go to state 110

    $default  reduce using rule 23 (filter_tail)


State 73

   25 predicate_tail: p_stmt .
   30 p_stmt: p_stmt . CONCATENATION p_factor

    CONCATENATION  shift, and go to state 111

    $default  reduce using rule 25 (predicate_tail)


State 74

   29 f_stmt: f_factor .
   35 f_factor: f_factor . REPETITION

    REPETITION  shift, and go to state 112

    $default  reduce using rule 29 (f_stmt)


State 75

   31 p_stmt: p_factor .
   37 p_factor: p_factor . REPETITION

    REPETITION  shift, and go to state 113

    $default  reduce using rule 31 (p_stmt)


State 76

   36 f_factor: f_expr .

    $default  reduce using rule 36 (f_factor)


State 77

   38 p_factor: p_expr .

    $default  reduce using rule 38 (p_factor)


State 78

   44 p_expr: p_identifier .

    $default  reduce using rule 44 (p_expr)


State 79

   18 predicate_declaration: PREDICATE VARIABLE ASSIGNMENT DOLAR . method

    LENGTHM    shift, and go to state 114
    LESSTHANM  shift, and go to state 115
    MORETHANM  shift, and go to state 116
    CHARATM    shift, and go to state 117
    EQUALSM    shift, and go to state 118

    method  go to state 119


State 80

   19 predicate_declaration: PREDICATE VARIABLE ASSIGNMENT HASH . method

    LENGTHM    shift, and go to state 114
    LESSTHANM  shift, and go to state 115
    MORETHANM  shift, and go to state 116
    CHARATM    shift, and go to state 117
    EQUALSM    shift, and go to state 118

    method  go to state 120


State 81

   17 predicate_declaration: PREDICATE p_identifier ASSIGNMENT DOLAR . method

    LENGTHM    shift, and go to state 114
    LESSTHANM  shift, and go to state 115
    MORETHANM  shift, and go to state 116
    CHARATM    shift, and go to state 117
    EQUALSM    shift, and go to state 118

    method  go to state 121


State 82

   16 predicate_declaration: PREDICATE p_identifier ASSIGNMENT HASH . method

    LENGTHM    shift, and go to state 114
    LESSTHANM  shift, and go to state 115
    MORETHANM  shift, and go to state 116
    CHARATM    shift, and go to state 117
    EQUALSM    shift, and go to state 118

    method  go to state 122


State 83

   40 q_expr: VARIABLE .

    $default  reduce using rule 40 (q_expr)


State 84

   39 q_expr: LPARAN . query_tail RPARAN

    VARIABLE  shift, and go to state 83
    LPARAN    shift, and go to state 84

    query_tail  go to state 123
    q_stmt      go to state 86
    q_factor    go to state 87
    q_expr      go to state 88


State 85

   13 query_declaration: QUERY VARIABLE ASSIGNMENT query_tail . QUERY VARIABLE ASSIGNMENT filter_tail
   20 query_tail: query_tail . ALTERNATION q_stmt

    QUERY        shift, and go to state 124
    ALTERNATION  shift, and go to state 125


State 86

   21 query_tail: q_stmt .
   26 q_stmt: q_stmt . CONCATENATION q_factor

    CONCATENATION  shift, and go to state 126

    $default  reduce using rule 21 (query_tail)


State 87

   27 q_stmt: q_factor .
   32 q_factor: q_factor . REPETITION

    REPETITION  shift, and go to state 127

    $default  reduce using rule 27 (q_stmt)


State 88

   33 q_factor: q_expr .

    $default  reduce using rule 33 (q_factor)


State 89

   86 setbody: element . COMMA setbody
   87        | element .

    COMMA  shift, and go to state 128

    $default  reduce using rule 87 (setbody)


State 90

   81 set: SLBRACKET setbody . SRBRACKET

    SRBRACKET  shift, and go to state 129


State 91

   67 booleanopr: LESS .

    $default  reduce using rule 67 (booleanopr)


State 92

   66 booleanopr: GREATER .

    $default  reduce using rule 66 (booleanopr)


State 93

   69 booleanopr: LESSEQUAL .

    $default  reduce using rule 69 (booleanopr)


State 94

   68 booleanopr: GREATEREQUAL .

    $default  reduce using rule 68 (booleanopr)


State 95

   65 booleanopr: ISEQUAL .

    $default  reduce using rule 65 (booleanopr)


State 96

   70 booleanopr: NOTEQUAL .

    $default  reduce using rule 70 (booleanopr)


State 97

   62 cond: VARIABLE booleanopr . element
   64     | VARIABLE booleanopr . VARIABLE

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    VARIABLE   shift, and go to state 130
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    element  go to state 131
    map      go to state 62
    set      go to state 63


State 98

   85 map_tail: STRING . COLON element

    COLON  shift, and go to state 132


State 99

   80 map: LBRACKET mapbody . RBRACKET
   82 mapbody: mapbody . COMMA map_tail

    COMMA     shift, and go to state 133
    RBRACKET  shift, and go to state 134


State 100

   83 mapbody: map_tail .

    $default  reduce using rule 83 (mapbody)


State 101

   58 if_cond: IFSTATEMENT LPARAN cond RPARAN . LBRACKET functionbody RBRACKET
   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN . LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET

    LBRACKET  shift, and go to state 135


State 102

   63 cond: element booleanopr . VARIABLE

    VARIABLE  shift, and go to state 136


State 103

   73 for: FOR LPARAN assignment SEMICOLON . cond SEMICOLON assignment RPARAN LBRACKET functionbody RBRACKET

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    VARIABLE   shift, and go to state 56
    BOOLEAN    shift, and go to state 57
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    $default  reduce using rule 60 (cond)

    cond     go to state 137
    element  go to state 61
    map      go to state 62
    set      go to state 63


State 104

   74 while: WHILE LPARAN cond RPARAN . LBRACKET functionbody RBRACKET

    LBRACKET  shift, and go to state 138


State 105

   12 exec_function: EXEC LPARAN VARIABLE COMMA VARIABLE . RPARAN

    RPARAN  shift, and go to state 139


State 106

   22 filter_tail: filter_tail . ALTERNATION f_stmt
   41 f_expr: LPARAN filter_tail . RPARAN

    RPARAN       shift, and go to state 140
    ALTERNATION  shift, and go to state 108


State 107

   24 predicate_tail: predicate_tail . ALTERNATION p_stmt
   43 p_expr: LPARAN predicate_tail . RPARAN

    RPARAN       shift, and go to state 141
    ALTERNATION  shift, and go to state 109


State 108

   22 filter_tail: filter_tail ALTERNATION . f_stmt

    VARIABLE  shift, and go to state 68
    LPARAN    shift, and go to state 142

    $default  reduce using rule 34 (f_factor)

    f_stmt    go to state 143
    f_factor  go to state 74
    f_expr    go to state 76


State 109

   24 predicate_tail: predicate_tail ALTERNATION . p_stmt

    RANDEDGE    shift, and go to state 31
    RANDVERTEX  shift, and go to state 32
    LPARAN      shift, and go to state 144

    p_stmt        go to state 145
    p_factor      go to state 75
    p_expr        go to state 77
    p_identifier  go to state 78


State 110

   28 f_stmt: f_stmt CONCATENATION . f_factor

    VARIABLE  shift, and go to state 68
    LPARAN    shift, and go to state 142

    $default  reduce using rule 34 (f_factor)

    f_factor  go to state 146
    f_expr    go to state 76


State 111

   30 p_stmt: p_stmt CONCATENATION . p_factor

    RANDEDGE    shift, and go to state 31
    RANDVERTEX  shift, and go to state 32
    LPARAN      shift, and go to state 144

    p_factor      go to state 147
    p_expr        go to state 77
    p_identifier  go to state 78


State 112

   35 f_factor: f_factor REPETITION .

    $default  reduce using rule 35 (f_factor)


State 113

   37 p_factor: p_factor REPETITION .

    $default  reduce using rule 37 (p_factor)


State 114

   53 method: LENGTHM . LPARAN STRING COMMA INTEGER RPARAN

    LPARAN  shift, and go to state 148


State 115

   48 method: LESSTHANM . LPARAN STRING COMMA INTEGER RPARAN
   49       | LESSTHANM . LPARAN STRING COMMA FLOAT RPARAN

    LPARAN  shift, and go to state 149


State 116

   50 method: MORETHANM . LPARAN STRING COMMA INTEGER RPARAN
   51       | MORETHANM . LPARAN STRING COMMA FLOAT RPARAN

    LPARAN  shift, and go to state 150


State 117

   52 method: CHARATM . LPARAN STRING COMMA INTEGER COMMA STRING RPARAN

    LPARAN  shift, and go to state 151


State 118

   47 method: EQUALSM . LPARAN STRING COMMA element RPARAN

    LPARAN  shift, and go to state 152


State 119

   18 predicate_declaration: PREDICATE VARIABLE ASSIGNMENT DOLAR method .

    $default  reduce using rule 18 (predicate_declaration)


State 120

   19 predicate_declaration: PREDICATE VARIABLE ASSIGNMENT HASH method .

    $default  reduce using rule 19 (predicate_declaration)


State 121

   17 predicate_declaration: PREDICATE p_identifier ASSIGNMENT DOLAR method .

    $default  reduce using rule 17 (predicate_declaration)


State 122

   16 predicate_declaration: PREDICATE p_identifier ASSIGNMENT HASH method .

    $default  reduce using rule 16 (predicate_declaration)


State 123

   20 query_tail: query_tail . ALTERNATION q_stmt
   39 q_expr: LPARAN query_tail . RPARAN

    RPARAN       shift, and go to state 153
    ALTERNATION  shift, and go to state 125


State 124

   13 query_declaration: QUERY VARIABLE ASSIGNMENT query_tail QUERY . VARIABLE ASSIGNMENT filter_tail

    VARIABLE  shift, and go to state 154


State 125

   20 query_tail: query_tail ALTERNATION . q_stmt

    VARIABLE  shift, and go to state 83
    LPARAN    shift, and go to state 84

    q_stmt    go to state 155
    q_factor  go to state 87
    q_expr    go to state 88


State 126

   26 q_stmt: q_stmt CONCATENATION . q_factor

    VARIABLE  shift, and go to state 83
    LPARAN    shift, and go to state 84

    q_factor  go to state 156
    q_expr    go to state 88


State 127

   32 q_factor: q_factor REPETITION .

    $default  reduce using rule 32 (q_factor)


State 128

   86 setbody: element COMMA . setbody

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    element  go to state 89
    map      go to state 62
    set      go to state 63
    setbody  go to state 157


State 129

   81 set: SLBRACKET setbody SRBRACKET .

    $default  reduce using rule 81 (set)


State 130

   64 cond: VARIABLE booleanopr VARIABLE .

    $default  reduce using rule 64 (cond)


State 131

   62 cond: VARIABLE booleanopr element .

    $default  reduce using rule 62 (cond)


State 132

   85 map_tail: STRING COLON . element

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    element  go to state 158
    map      go to state 62
    set      go to state 63


State 133

   82 mapbody: mapbody COMMA . map_tail

    STRING  shift, and go to state 98

    map_tail  go to state 159


State 134

   80 map: LBRACKET mapbody RBRACKET .

    $default  reduce using rule 80 (map)


State 135

   58 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET . functionbody RBRACKET
   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET . functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET

    EXEC         shift, and go to state 7
    FILTER       shift, and go to state 8
    PREDICATE    shift, and go to state 9
    QUERY        shift, and go to state 10
    IFSTATEMENT  shift, and go to state 11
    FOR          shift, and go to state 12
    WHILE        shift, and go to state 13
    COMMENT      shift, and go to state 14
    VARIABLE     shift, and go to state 15

    $default  reduce using rule 54 (assignment)

    functionbody           go to state 160
    stmt                   go to state 17
    exec_function          go to state 18
    query_declaration      go to state 19
    filter_declaration     go to state 20
    predicate_declaration  go to state 21
    assignment             go to state 22
    conditional            go to state 23
    if_cond                go to state 24
    ifelse_cond            go to state 25
    loop                   go to state 26
    for                    go to state 27
    while                  go to state 28


State 136

   63 cond: element booleanopr VARIABLE .

    $default  reduce using rule 63 (cond)


State 137

   73 for: FOR LPARAN assignment SEMICOLON cond . SEMICOLON assignment RPARAN LBRACKET functionbody RBRACKET

    SEMICOLON  shift, and go to state 161


State 138

   74 while: WHILE LPARAN cond RPARAN LBRACKET . functionbody RBRACKET

    EXEC         shift, and go to state 7
    FILTER       shift, and go to state 8
    PREDICATE    shift, and go to state 9
    QUERY        shift, and go to state 10
    IFSTATEMENT  shift, and go to state 11
    FOR          shift, and go to state 12
    WHILE        shift, and go to state 13
    COMMENT      shift, and go to state 14
    VARIABLE     shift, and go to state 15

    $default  reduce using rule 54 (assignment)

    functionbody           go to state 162
    stmt                   go to state 17
    exec_function          go to state 18
    query_declaration      go to state 19
    filter_declaration     go to state 20
    predicate_declaration  go to state 21
    assignment             go to state 22
    conditional            go to state 23
    if_cond                go to state 24
    ifelse_cond            go to state 25
    loop                   go to state 26
    for                    go to state 27
    while                  go to state 28


State 139

   12 exec_function: EXEC LPARAN VARIABLE COMMA VARIABLE RPARAN .

    $default  reduce using rule 12 (exec_function)


State 140

   41 f_expr: LPARAN filter_tail RPARAN .

    $default  reduce using rule 41 (f_expr)


State 141

   43 p_expr: LPARAN predicate_tail RPARAN .

    $default  reduce using rule 43 (p_expr)


State 142

   41 f_expr: LPARAN . filter_tail RPARAN

    VARIABLE  shift, and go to state 68
    LPARAN    shift, and go to state 142

    $default  reduce using rule 34 (f_factor)

    filter_tail  go to state 106
    f_stmt       go to state 72
    f_factor     go to state 74
    f_expr       go to state 76


State 143

   22 filter_tail: filter_tail ALTERNATION f_stmt .
   28 f_stmt: f_stmt . CONCATENATION f_factor

    CONCATENATION  shift, and go to state 110

    $default  reduce using rule 22 (filter_tail)


State 144

   43 p_expr: LPARAN . predicate_tail RPARAN

    RANDEDGE    shift, and go to state 31
    RANDVERTEX  shift, and go to state 32
    LPARAN      shift, and go to state 144

    predicate_tail  go to state 107
    p_stmt          go to state 73
    p_factor        go to state 75
    p_expr          go to state 77
    p_identifier    go to state 78


State 145

   24 predicate_tail: predicate_tail ALTERNATION p_stmt .
   30 p_stmt: p_stmt . CONCATENATION p_factor

    CONCATENATION  shift, and go to state 111

    $default  reduce using rule 24 (predicate_tail)


State 146

   28 f_stmt: f_stmt CONCATENATION f_factor .
   35 f_factor: f_factor . REPETITION

    REPETITION  shift, and go to state 112

    $default  reduce using rule 28 (f_stmt)


State 147

   30 p_stmt: p_stmt CONCATENATION p_factor .
   37 p_factor: p_factor . REPETITION

    REPETITION  shift, and go to state 113

    $default  reduce using rule 30 (p_stmt)


State 148

   53 method: LENGTHM LPARAN . STRING COMMA INTEGER RPARAN

    STRING  shift, and go to state 163


State 149

   48 method: LESSTHANM LPARAN . STRING COMMA INTEGER RPARAN
   49       | LESSTHANM LPARAN . STRING COMMA FLOAT RPARAN

    STRING  shift, and go to state 164


State 150

   50 method: MORETHANM LPARAN . STRING COMMA INTEGER RPARAN
   51       | MORETHANM LPARAN . STRING COMMA FLOAT RPARAN

    STRING  shift, and go to state 165


State 151

   52 method: CHARATM LPARAN . STRING COMMA INTEGER COMMA STRING RPARAN

    STRING  shift, and go to state 166


State 152

   47 method: EQUALSM LPARAN . STRING COMMA element RPARAN

    STRING  shift, and go to state 167


State 153

   39 q_expr: LPARAN query_tail RPARAN .

    $default  reduce using rule 39 (q_expr)


State 154

   13 query_declaration: QUERY VARIABLE ASSIGNMENT query_tail QUERY VARIABLE . ASSIGNMENT filter_tail

    ASSIGNMENT  shift, and go to state 168


State 155

   20 query_tail: query_tail ALTERNATION q_stmt .
   26 q_stmt: q_stmt . CONCATENATION q_factor

    CONCATENATION  shift, and go to state 126

    $default  reduce using rule 20 (query_tail)


State 156

   26 q_stmt: q_stmt CONCATENATION q_factor .
   32 q_factor: q_factor . REPETITION

    REPETITION  shift, and go to state 127

    $default  reduce using rule 26 (q_stmt)


State 157

   86 setbody: element COMMA setbody .

    $default  reduce using rule 86 (setbody)


State 158

   85 map_tail: STRING COLON element .

    $default  reduce using rule 85 (map_tail)


State 159

   82 mapbody: mapbody COMMA map_tail .

    $default  reduce using rule 82 (mapbody)


State 160

   58 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody . RBRACKET
   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody . RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET

    RBRACKET  shift, and go to state 169


State 161

   73 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON . assignment RPARAN LBRACKET functionbody RBRACKET

    VARIABLE  shift, and go to state 15

    $default  reduce using rule 54 (assignment)

    assignment  go to state 170


State 162

   74 while: WHILE LPARAN cond RPARAN LBRACKET functionbody . RBRACKET

    RBRACKET  shift, and go to state 171


State 163

   53 method: LENGTHM LPARAN STRING . COMMA INTEGER RPARAN

    COMMA  shift, and go to state 172


State 164

   48 method: LESSTHANM LPARAN STRING . COMMA INTEGER RPARAN
   49       | LESSTHANM LPARAN STRING . COMMA FLOAT RPARAN

    COMMA  shift, and go to state 173


State 165

   50 method: MORETHANM LPARAN STRING . COMMA INTEGER RPARAN
   51       | MORETHANM LPARAN STRING . COMMA FLOAT RPARAN

    COMMA  shift, and go to state 174


State 166

   52 method: CHARATM LPARAN STRING . COMMA INTEGER COMMA STRING RPARAN

    COMMA  shift, and go to state 175


State 167

   47 method: EQUALSM LPARAN STRING . COMMA element RPARAN

    COMMA  shift, and go to state 176


State 168

   13 query_declaration: QUERY VARIABLE ASSIGNMENT query_tail QUERY VARIABLE ASSIGNMENT . filter_tail

    VARIABLE  shift, and go to state 68
    LPARAN    shift, and go to state 142

    $default  reduce using rule 34 (f_factor)

    filter_tail  go to state 177
    f_stmt       go to state 72
    f_factor     go to state 74
    f_expr       go to state 76


State 169

   58 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET .
   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET . ELSESTATEMENT LBRACKET functionbody RBRACKET

    ELSESTATEMENT  shift, and go to state 178

    $default  reduce using rule 58 (if_cond)


State 170

   73 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment . RPARAN LBRACKET functionbody RBRACKET

    RPARAN  shift, and go to state 179


State 171

   74 while: WHILE LPARAN cond RPARAN LBRACKET functionbody RBRACKET .

    $default  reduce using rule 74 (while)


State 172

   53 method: LENGTHM LPARAN STRING COMMA . INTEGER RPARAN

    INTEGER  shift, and go to state 180


State 173

   48 method: LESSTHANM LPARAN STRING COMMA . INTEGER RPARAN
   49       | LESSTHANM LPARAN STRING COMMA . FLOAT RPARAN

    FLOAT    shift, and go to state 181
    INTEGER  shift, and go to state 182


State 174

   50 method: MORETHANM LPARAN STRING COMMA . INTEGER RPARAN
   51       | MORETHANM LPARAN STRING COMMA . FLOAT RPARAN

    FLOAT    shift, and go to state 183
    INTEGER  shift, and go to state 184


State 175

   52 method: CHARATM LPARAN STRING COMMA . INTEGER COMMA STRING RPARAN

    INTEGER  shift, and go to state 185


State 176

   47 method: EQUALSM LPARAN STRING COMMA . element RPARAN

    FLOAT      shift, and go to state 53
    STRING     shift, and go to state 54
    SLBRACKET  shift, and go to state 55
    LBRACKET   shift, and go to state 58
    INTEGER    shift, and go to state 59

    element  go to state 186
    map      go to state 62
    set      go to state 63


State 177

   13 query_declaration: QUERY VARIABLE ASSIGNMENT query_tail QUERY VARIABLE ASSIGNMENT filter_tail .
   22 filter_tail: filter_tail . ALTERNATION f_stmt

    ALTERNATION  shift, and go to state 108

    $default  reduce using rule 13 (query_declaration)


State 178

   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT . LBRACKET functionbody RBRACKET

    LBRACKET  shift, and go to state 187


State 179

   73 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN . LBRACKET functionbody RBRACKET

    LBRACKET  shift, and go to state 188


State 180

   53 method: LENGTHM LPARAN STRING COMMA INTEGER . RPARAN

    RPARAN  shift, and go to state 189


State 181

   49 method: LESSTHANM LPARAN STRING COMMA FLOAT . RPARAN

    RPARAN  shift, and go to state 190


State 182

   48 method: LESSTHANM LPARAN STRING COMMA INTEGER . RPARAN

    RPARAN  shift, and go to state 191


State 183

   51 method: MORETHANM LPARAN STRING COMMA FLOAT . RPARAN

    RPARAN  shift, and go to state 192


State 184

   50 method: MORETHANM LPARAN STRING COMMA INTEGER . RPARAN

    RPARAN  shift, and go to state 193


State 185

   52 method: CHARATM LPARAN STRING COMMA INTEGER . COMMA STRING RPARAN

    COMMA  shift, and go to state 194


State 186

   47 method: EQUALSM LPARAN STRING COMMA element . RPARAN

    RPARAN  shift, and go to state 195


State 187

   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET . functionbody RBRACKET

    EXEC         shift, and go to state 7
    FILTER       shift, and go to state 8
    PREDICATE    shift, and go to state 9
    QUERY        shift, and go to state 10
    IFSTATEMENT  shift, and go to state 11
    FOR          shift, and go to state 12
    WHILE        shift, and go to state 13
    COMMENT      shift, and go to state 14
    VARIABLE     shift, and go to state 15

    $default  reduce using rule 54 (assignment)

    functionbody           go to state 196
    stmt                   go to state 17
    exec_function          go to state 18
    query_declaration      go to state 19
    filter_declaration     go to state 20
    predicate_declaration  go to state 21
    assignment             go to state 22
    conditional            go to state 23
    if_cond                go to state 24
    ifelse_cond            go to state 25
    loop                   go to state 26
    for                    go to state 27
    while                  go to state 28


State 188

   73 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET . functionbody RBRACKET

    EXEC         shift, and go to state 7
    FILTER       shift, and go to state 8
    PREDICATE    shift, and go to state 9
    QUERY        shift, and go to state 10
    IFSTATEMENT  shift, and go to state 11
    FOR          shift, and go to state 12
    WHILE        shift, and go to state 13
    COMMENT      shift, and go to state 14
    VARIABLE     shift, and go to state 15

    $default  reduce using rule 54 (assignment)

    functionbody           go to state 197
    stmt                   go to state 17
    exec_function          go to state 18
    query_declaration      go to state 19
    filter_declaration     go to state 20
    predicate_declaration  go to state 21
    assignment             go to state 22
    conditional            go to state 23
    if_cond                go to state 24
    ifelse_cond            go to state 25
    loop                   go to state 26
    for                    go to state 27
    while                  go to state 28


State 189

   53 method: LENGTHM LPARAN STRING COMMA INTEGER RPARAN .

    $default  reduce using rule 53 (method)


State 190

   49 method: LESSTHANM LPARAN STRING COMMA FLOAT RPARAN .

    $default  reduce using rule 49 (method)


State 191

   48 method: LESSTHANM LPARAN STRING COMMA INTEGER RPARAN .

    $default  reduce using rule 48 (method)


State 192

   51 method: MORETHANM LPARAN STRING COMMA FLOAT RPARAN .

    $default  reduce using rule 51 (method)


State 193

   50 method: MORETHANM LPARAN STRING COMMA INTEGER RPARAN .

    $default  reduce using rule 50 (method)


State 194

   52 method: CHARATM LPARAN STRING COMMA INTEGER COMMA . STRING RPARAN

    STRING  shift, and go to state 198


State 195

   47 method: EQUALSM LPARAN STRING COMMA element RPARAN .

    $default  reduce using rule 47 (method)


State 196

   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody . RBRACKET

    RBRACKET  shift, and go to state 199


State 197

   73 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET functionbody . RBRACKET

    RBRACKET  shift, and go to state 200


State 198

   52 method: CHARATM LPARAN STRING COMMA INTEGER COMMA STRING . RPARAN

    RPARAN  shift, and go to state 201


State 199

   59 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET functionbody RBRACKET ELSESTATEMENT LBRACKET functionbody RBRACKET .

    $default  reduce using rule 59 (ifelse_cond)


State 200

   73 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET functionbody RBRACKET .

    $default  reduce using rule 73 (for)


State 201

   52 method: CHARATM LPARAN STRING COMMA INTEGER COMMA STRING RPARAN .

    $default  reduce using rule 52 (method)
