Terminals unused in grammar

   FUNCTION
   END
   RETURN
   INT
   EQUAL
   NOT
   LENGHT
   AND
   OR
   PLUS
   MINUS
   MULTIPLICATION
   DIVISION


State 64 conflicts: 1 reduce/reduce
State 86 conflicts: 1 reduce/reduce


Grammar

    0 $accept: entry $end

    1 entry: MAIN LPARAN RPARAN LBRACKET functionbody RBRACKET

    2 functionbody: stmt functionbody
    3             | stmt

    4 stmt: graph_definition

    5 graph_definition: DIRECTED IDENTIFIER LBRACKET component_list RBRACKET
    6                 | UNDIRECTED IDENTIFIER LBRACKET component_list RBRACKET

    7 component_list: component component_list
    8               | component

    9 component: vertex_declaration end
   10          | edge_declaration end
   11          | graph_object_declaration end
   12          | methodcall end
   13          | assignment end
   14          | conditional
   15          | loop
   16          | COMMENT

   17 vertex_declaration: VERTEX IDENTIFIER

   18 edge_declaration: EDGE IDENTIFIER

   19 graph_object_declaration: property

   20 property: PROPERTY IDENTIFIER ASSIGNMENT LPARAN property_stmt RPARAN

   21 methodcall: IDENTIFIER DOT INCLUDEPROPERTY LPARAN property_stmt
   22           | CONNECT LPARAN IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RPARAN

   23 assignment: %empty
   24           | VARIABLE ASSIGNMENT element

   25 conditional: if_cond
   26            | ifelse_cond

   27 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET

   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET component RBRACKET

   29 cond: %empty
   30     | BOOLEAN
   31     | IDENTIFIER booleanopr element
   32     | element booleanopr IDENTIFIER
   33     | IDENTIFIER booleanopr IDENTIFIER

   34 booleanopr: ISEQUAL
   35           | GREATER
   36           | LESS
   37           | GREATEREQUAL
   38           | LESSEQUAL
   39           | NOTEQUAL

   40 loop: for
   41     | while

   42 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET component_list RBRACKET

   43 while: WHILE LPARAN cond RPARAN LBRACKET component_list RBRACKET

   44 property_stmt: STRING COMMA element

   45 map: LBRACKET mapbody RBRACKET

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

   47 list: SLBRACKET listbody SRBRACKET

   48 mapbody: mapbody COMMA map_tail
   49        | map_tail
   50        | %empty

   51 map_tail: STRING COLON element

   52 setbody1: setbody1 COMMA set_tail1
   53         | set_tail1
   54         | %empty

   55 setbody2: setbody2 COMMA set_tail2
   56         | set_tail2
   57         | %empty

   58 setbody3: setbody3 COMMA set_tail3
   59         | set_tail3
   60         | %empty

   61 setbody4: setbody4 COMMA set_tail4
   62         | set_tail4
   63         | %empty

   64 setbody5: setbody5 COMMA set_tail5
   65         | set_tail5
   66         | %empty

   67 setbody6: setbody6 COMMA set_tail6
   68         | set_tail6
   69         | %empty

   70 set_tail1: INTEGER

   71 set_tail2: FLOAT

   72 set_tail3: STRING

   73 set_tail4: set

   74 set_tail5: map

   75 set_tail6: list

   76 listbody: list COMMA list_tail
   77         | list_tail
   78         | %empty

   79 list_tail: element

   80 element: INTEGER
   81        | FLOAT
   82        | STRING
   83        | map
   84        | list
   85        | set

   86 end: SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258)
IFSTATEMENT (259) 27 28
ELSESTATEMENT (260) 28
END (261)
FOR (262) 42
WHILE (263) 43
RETURN (264)
IDENTIFIER (265) 5 6 17 18 20 21 22 31 32 33
COMMENT (266) 16
INT (267)
FLOAT (268) 71 81
STRING (269) 44 51 72 82
EQUAL (270)
SEMICOLON (271) 42 86
COMMA (272) 22 44 48 52 55 58 61 64 67 76
DOT (273) 21
SLBRACKET (274) 46 47
SRBRACKET (275) 46 47
NOT (276)
ASSIGNMENT (277) 20 24
COLON (278) 51
CONNECT (279) 22
LENGHT (280)
INCLUDEPROPERTY (281) 21
MAIN (282) 1
PROPERTY (283) 20
VARIABLE (284) 24
VERTEX (285) 17
BOOLEAN (286) 30
DIRECTED (287) 5
UNDIRECTED (288) 6
EDGE (289) 18
LPARAN (290) 1 20 21 22 27 28 42 43
RPARAN (291) 1 20 22 27 28 42 43
LBRACKET (292) 1 5 6 27 28 42 43 45
RBRACKET (293) 1 5 6 27 28 42 43 45
INTEGER (294) 70 80
AND (295)
OR (296)
ISEQUAL (297) 34
NOTEQUAL (298) 39
LESS (299) 36
GREATER (300) 35
LESSEQUAL (301) 38
GREATEREQUAL (302) 37
PLUS (303)
MINUS (304)
MULTIPLICATION (305)
DIVISION (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
entry (53)
    on left: 1, on right: 0
functionbody (54)
    on left: 2 3, on right: 1 2
stmt (55)
    on left: 4, on right: 2 3
graph_definition (56)
    on left: 5 6, on right: 4
component_list (57)
    on left: 7 8, on right: 5 6 7 27 28 42 43
component (58)
    on left: 9 10 11 12 13 14 15 16, on right: 7 8 28
vertex_declaration (59)
    on left: 17, on right: 9
edge_declaration (60)
    on left: 18, on right: 10
graph_object_declaration (61)
    on left: 19, on right: 11
property (62)
    on left: 20, on right: 19
methodcall (63)
    on left: 21 22, on right: 12
assignment (64)
    on left: 23 24, on right: 13 42
conditional (65)
    on left: 25 26, on right: 14
if_cond (66)
    on left: 27, on right: 25
ifelse_cond (67)
    on left: 28, on right: 26
cond (68)
    on left: 29 30 31 32 33, on right: 27 28 42 43
booleanopr (69)
    on left: 34 35 36 37 38 39, on right: 31 32 33
loop (70)
    on left: 40 41, on right: 15
for (71)
    on left: 42, on right: 40
while (72)
    on left: 43, on right: 41
property_stmt (73)
    on left: 44, on right: 20 21
map (74)
    on left: 45, on right: 74 83
set (75)
    on left: 46, on right: 73 85
list (76)
    on left: 47, on right: 75 76 84
mapbody (77)
    on left: 48 49 50, on right: 45 48
map_tail (78)
    on left: 51, on right: 48 49
setbody1 (79)
    on left: 52 53 54, on right: 46 52
setbody2 (80)
    on left: 55 56 57, on right: 46 55
setbody3 (81)
    on left: 58 59 60, on right: 46 58
setbody4 (82)
    on left: 61 62 63, on right: 46 61
setbody5 (83)
    on left: 64 65 66, on right: 46 64
setbody6 (84)
    on left: 67 68 69, on right: 46 67
set_tail1 (85)
    on left: 70, on right: 52 53
set_tail2 (86)
    on left: 71, on right: 55 56
set_tail3 (87)
    on left: 72, on right: 58 59
set_tail4 (88)
    on left: 73, on right: 61 62
set_tail5 (89)
    on left: 74, on right: 64 65
set_tail6 (90)
    on left: 75, on right: 67 68
listbody (91)
    on left: 76 77 78, on right: 47
list_tail (92)
    on left: 79, on right: 76 77
element (93)
    on left: 80 81 82 83 84 85, on right: 24 31 32 44 51 79
end (94)
    on left: 86, on right: 9 10 11 12 13


State 0

    0 $accept: . entry $end

    MAIN  shift, and go to state 1

    entry  go to state 2


State 1

    1 entry: MAIN . LPARAN RPARAN LBRACKET functionbody RBRACKET

    LPARAN  shift, and go to state 3


State 2

    0 $accept: entry . $end

    $end  shift, and go to state 4


State 3

    1 entry: MAIN LPARAN . RPARAN LBRACKET functionbody RBRACKET

    RPARAN  shift, and go to state 5


State 4

    0 $accept: entry $end .

    $default  accept


State 5

    1 entry: MAIN LPARAN RPARAN . LBRACKET functionbody RBRACKET

    LBRACKET  shift, and go to state 6


State 6

    1 entry: MAIN LPARAN RPARAN LBRACKET . functionbody RBRACKET

    DIRECTED    shift, and go to state 7
    UNDIRECTED  shift, and go to state 8

    functionbody      go to state 9
    stmt              go to state 10
    graph_definition  go to state 11


State 7

    5 graph_definition: DIRECTED . IDENTIFIER LBRACKET component_list RBRACKET

    IDENTIFIER  shift, and go to state 12


State 8

    6 graph_definition: UNDIRECTED . IDENTIFIER LBRACKET component_list RBRACKET

    IDENTIFIER  shift, and go to state 13


State 9

    1 entry: MAIN LPARAN RPARAN LBRACKET functionbody . RBRACKET

    RBRACKET  shift, and go to state 14


State 10

    2 functionbody: stmt . functionbody
    3             | stmt .

    DIRECTED    shift, and go to state 7
    UNDIRECTED  shift, and go to state 8

    $default  reduce using rule 3 (functionbody)

    functionbody      go to state 15
    stmt              go to state 10
    graph_definition  go to state 11


State 11

    4 stmt: graph_definition .

    $default  reduce using rule 4 (stmt)


State 12

    5 graph_definition: DIRECTED IDENTIFIER . LBRACKET component_list RBRACKET

    LBRACKET  shift, and go to state 16


State 13

    6 graph_definition: UNDIRECTED IDENTIFIER . LBRACKET component_list RBRACKET

    LBRACKET  shift, and go to state 17


State 14

    1 entry: MAIN LPARAN RPARAN LBRACKET functionbody RBRACKET .

    $default  reduce using rule 1 (entry)


State 15

    2 functionbody: stmt functionbody .

    $default  reduce using rule 2 (functionbody)


State 16

    5 graph_definition: DIRECTED IDENTIFIER LBRACKET . component_list RBRACKET

    IFSTATEMENT  shift, and go to state 18
    FOR          shift, and go to state 19
    WHILE        shift, and go to state 20
    IDENTIFIER   shift, and go to state 21
    COMMENT      shift, and go to state 22
    CONNECT      shift, and go to state 23
    PROPERTY     shift, and go to state 24
    VARIABLE     shift, and go to state 25
    VERTEX       shift, and go to state 26
    EDGE         shift, and go to state 27

    $default  reduce using rule 23 (assignment)

    component_list            go to state 28
    component                 go to state 29
    vertex_declaration        go to state 30
    edge_declaration          go to state 31
    graph_object_declaration  go to state 32
    property                  go to state 33
    methodcall                go to state 34
    assignment                go to state 35
    conditional               go to state 36
    if_cond                   go to state 37
    ifelse_cond               go to state 38
    loop                      go to state 39
    for                       go to state 40
    while                     go to state 41


State 17

    6 graph_definition: UNDIRECTED IDENTIFIER LBRACKET . component_list RBRACKET

    IFSTATEMENT  shift, and go to state 18
    FOR          shift, and go to state 19
    WHILE        shift, and go to state 20
    IDENTIFIER   shift, and go to state 21
    COMMENT      shift, and go to state 22
    CONNECT      shift, and go to state 23
    PROPERTY     shift, and go to state 24
    VARIABLE     shift, and go to state 25
    VERTEX       shift, and go to state 26
    EDGE         shift, and go to state 27

    $default  reduce using rule 23 (assignment)

    component_list            go to state 42
    component                 go to state 29
    vertex_declaration        go to state 30
    edge_declaration          go to state 31
    graph_object_declaration  go to state 32
    property                  go to state 33
    methodcall                go to state 34
    assignment                go to state 35
    conditional               go to state 36
    if_cond                   go to state 37
    ifelse_cond               go to state 38
    loop                      go to state 39
    for                       go to state 40
    while                     go to state 41


State 18

   27 if_cond: IFSTATEMENT . LPARAN cond RPARAN LBRACKET component_list RBRACKET
   28 ifelse_cond: IFSTATEMENT . LPARAN cond RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET component RBRACKET

    LPARAN  shift, and go to state 43


State 19

   42 for: FOR . LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET component_list RBRACKET

    LPARAN  shift, and go to state 44


State 20

   43 while: WHILE . LPARAN cond RPARAN LBRACKET component_list RBRACKET

    LPARAN  shift, and go to state 45


State 21

   21 methodcall: IDENTIFIER . DOT INCLUDEPROPERTY LPARAN property_stmt

    DOT  shift, and go to state 46


State 22

   16 component: COMMENT .

    $default  reduce using rule 16 (component)


State 23

   22 methodcall: CONNECT . LPARAN IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RPARAN

    LPARAN  shift, and go to state 47


State 24

   20 property: PROPERTY . IDENTIFIER ASSIGNMENT LPARAN property_stmt RPARAN

    IDENTIFIER  shift, and go to state 48


State 25

   24 assignment: VARIABLE . ASSIGNMENT element

    ASSIGNMENT  shift, and go to state 49


State 26

   17 vertex_declaration: VERTEX . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


State 27

   18 edge_declaration: EDGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 28

    5 graph_definition: DIRECTED IDENTIFIER LBRACKET component_list . RBRACKET

    RBRACKET  shift, and go to state 52


State 29

    7 component_list: component . component_list
    8               | component .

    IFSTATEMENT  shift, and go to state 18
    FOR          shift, and go to state 19
    WHILE        shift, and go to state 20
    IDENTIFIER   shift, and go to state 21
    COMMENT      shift, and go to state 22
    CONNECT      shift, and go to state 23
    PROPERTY     shift, and go to state 24
    VARIABLE     shift, and go to state 25
    VERTEX       shift, and go to state 26
    EDGE         shift, and go to state 27

    SEMICOLON  reduce using rule 23 (assignment)
    $default   reduce using rule 8 (component_list)

    component_list            go to state 53
    component                 go to state 29
    vertex_declaration        go to state 30
    edge_declaration          go to state 31
    graph_object_declaration  go to state 32
    property                  go to state 33
    methodcall                go to state 34
    assignment                go to state 35
    conditional               go to state 36
    if_cond                   go to state 37
    ifelse_cond               go to state 38
    loop                      go to state 39
    for                       go to state 40
    while                     go to state 41


State 30

    9 component: vertex_declaration . end

    SEMICOLON  shift, and go to state 54

    end  go to state 55


State 31

   10 component: edge_declaration . end

    SEMICOLON  shift, and go to state 54

    end  go to state 56


State 32

   11 component: graph_object_declaration . end

    SEMICOLON  shift, and go to state 54

    end  go to state 57


State 33

   19 graph_object_declaration: property .

    $default  reduce using rule 19 (graph_object_declaration)


State 34

   12 component: methodcall . end

    SEMICOLON  shift, and go to state 54

    end  go to state 58


State 35

   13 component: assignment . end

    SEMICOLON  shift, and go to state 54

    end  go to state 59


State 36

   14 component: conditional .

    $default  reduce using rule 14 (component)


State 37

   25 conditional: if_cond .

    $default  reduce using rule 25 (conditional)


State 38

   26 conditional: ifelse_cond .

    $default  reduce using rule 26 (conditional)


State 39

   15 component: loop .

    $default  reduce using rule 15 (component)


State 40

   40 loop: for .

    $default  reduce using rule 40 (loop)


State 41

   41 loop: while .

    $default  reduce using rule 41 (loop)


State 42

    6 graph_definition: UNDIRECTED IDENTIFIER LBRACKET component_list . RBRACKET

    RBRACKET  shift, and go to state 60


State 43

   27 if_cond: IFSTATEMENT LPARAN . cond RPARAN LBRACKET component_list RBRACKET
   28 ifelse_cond: IFSTATEMENT LPARAN . cond RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET component RBRACKET

    IDENTIFIER  shift, and go to state 61
    FLOAT       shift, and go to state 62
    STRING      shift, and go to state 63
    SLBRACKET   shift, and go to state 64
    BOOLEAN     shift, and go to state 65
    LBRACKET    shift, and go to state 66
    INTEGER     shift, and go to state 67

    $default  reduce using rule 29 (cond)

    cond     go to state 68
    map      go to state 69
    set      go to state 70
    list     go to state 71
    element  go to state 72


State 44

   42 for: FOR LPARAN . assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET component_list RBRACKET

    VARIABLE  shift, and go to state 25

    $default  reduce using rule 23 (assignment)

    assignment  go to state 73


State 45

   43 while: WHILE LPARAN . cond RPARAN LBRACKET component_list RBRACKET

    IDENTIFIER  shift, and go to state 61
    FLOAT       shift, and go to state 62
    STRING      shift, and go to state 63
    SLBRACKET   shift, and go to state 64
    BOOLEAN     shift, and go to state 65
    LBRACKET    shift, and go to state 66
    INTEGER     shift, and go to state 67

    $default  reduce using rule 29 (cond)

    cond     go to state 74
    map      go to state 69
    set      go to state 70
    list     go to state 71
    element  go to state 72


State 46

   21 methodcall: IDENTIFIER DOT . INCLUDEPROPERTY LPARAN property_stmt

    INCLUDEPROPERTY  shift, and go to state 75


State 47

   22 methodcall: CONNECT LPARAN . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RPARAN

    IDENTIFIER  shift, and go to state 76


State 48

   20 property: PROPERTY IDENTIFIER . ASSIGNMENT LPARAN property_stmt RPARAN

    ASSIGNMENT  shift, and go to state 77


State 49

   24 assignment: VARIABLE ASSIGNMENT . element

    FLOAT      shift, and go to state 62
    STRING     shift, and go to state 63
    SLBRACKET  shift, and go to state 64
    LBRACKET   shift, and go to state 66
    INTEGER    shift, and go to state 67

    map      go to state 69
    set      go to state 70
    list     go to state 71
    element  go to state 78


State 50

   17 vertex_declaration: VERTEX IDENTIFIER .

    $default  reduce using rule 17 (vertex_declaration)


State 51

   18 edge_declaration: EDGE IDENTIFIER .

    $default  reduce using rule 18 (edge_declaration)


State 52

    5 graph_definition: DIRECTED IDENTIFIER LBRACKET component_list RBRACKET .

    $default  reduce using rule 5 (graph_definition)


State 53

    7 component_list: component component_list .

    $default  reduce using rule 7 (component_list)


State 54

   86 end: SEMICOLON .

    $default  reduce using rule 86 (end)


State 55

    9 component: vertex_declaration end .

    $default  reduce using rule 9 (component)


State 56

   10 component: edge_declaration end .

    $default  reduce using rule 10 (component)


State 57

   11 component: graph_object_declaration end .

    $default  reduce using rule 11 (component)


State 58

   12 component: methodcall end .

    $default  reduce using rule 12 (component)


State 59

   13 component: assignment end .

    $default  reduce using rule 13 (component)


State 60

    6 graph_definition: UNDIRECTED IDENTIFIER LBRACKET component_list RBRACKET .

    $default  reduce using rule 6 (graph_definition)


State 61

   31 cond: IDENTIFIER . booleanopr element
   33     | IDENTIFIER . booleanopr IDENTIFIER

    ISEQUAL       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84

    booleanopr  go to state 85


State 62

   81 element: FLOAT .

    $default  reduce using rule 81 (element)


State 63

   82 element: STRING .

    $default  reduce using rule 82 (element)


State 64

   46 set: SLBRACKET . setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET
   47 list: SLBRACKET . listbody SRBRACKET

    FLOAT      shift, and go to state 62
    STRING     shift, and go to state 63
    SLBRACKET  shift, and go to state 64
    LBRACKET   shift, and go to state 66
    INTEGER    shift, and go to state 86

    SRBRACKET  reduce using rule 54 (setbody1)
    SRBRACKET  [reduce using rule 78 (listbody)]
    $default   reduce using rule 54 (setbody1)

    map        go to state 69
    set        go to state 70
    list       go to state 87
    setbody1   go to state 88
    set_tail1  go to state 89
    listbody   go to state 90
    list_tail  go to state 91
    element    go to state 92


State 65

   30 cond: BOOLEAN .

    $default  reduce using rule 30 (cond)


State 66

   45 map: LBRACKET . mapbody RBRACKET

    STRING  shift, and go to state 93

    $default  reduce using rule 50 (mapbody)

    mapbody   go to state 94
    map_tail  go to state 95


State 67

   80 element: INTEGER .

    $default  reduce using rule 80 (element)


State 68

   27 if_cond: IFSTATEMENT LPARAN cond . RPARAN LBRACKET component_list RBRACKET
   28 ifelse_cond: IFSTATEMENT LPARAN cond . RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET component RBRACKET

    RPARAN  shift, and go to state 96


State 69

   83 element: map .

    $default  reduce using rule 83 (element)


State 70

   85 element: set .

    $default  reduce using rule 85 (element)


State 71

   84 element: list .

    $default  reduce using rule 84 (element)


State 72

   32 cond: element . booleanopr IDENTIFIER

    ISEQUAL       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84

    booleanopr  go to state 97


State 73

   42 for: FOR LPARAN assignment . SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET component_list RBRACKET

    SEMICOLON  shift, and go to state 98


State 74

   43 while: WHILE LPARAN cond . RPARAN LBRACKET component_list RBRACKET

    RPARAN  shift, and go to state 99


State 75

   21 methodcall: IDENTIFIER DOT INCLUDEPROPERTY . LPARAN property_stmt

    LPARAN  shift, and go to state 100


State 76

   22 methodcall: CONNECT LPARAN IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RPARAN

    COMMA  shift, and go to state 101


State 77

   20 property: PROPERTY IDENTIFIER ASSIGNMENT . LPARAN property_stmt RPARAN

    LPARAN  shift, and go to state 102


State 78

   24 assignment: VARIABLE ASSIGNMENT element .

    $default  reduce using rule 24 (assignment)


State 79

   34 booleanopr: ISEQUAL .

    $default  reduce using rule 34 (booleanopr)


State 80

   39 booleanopr: NOTEQUAL .

    $default  reduce using rule 39 (booleanopr)


State 81

   36 booleanopr: LESS .

    $default  reduce using rule 36 (booleanopr)


State 82

   35 booleanopr: GREATER .

    $default  reduce using rule 35 (booleanopr)


State 83

   38 booleanopr: LESSEQUAL .

    $default  reduce using rule 38 (booleanopr)


State 84

   37 booleanopr: GREATEREQUAL .

    $default  reduce using rule 37 (booleanopr)


State 85

   31 cond: IDENTIFIER booleanopr . element
   33     | IDENTIFIER booleanopr . IDENTIFIER

    IDENTIFIER  shift, and go to state 103
    FLOAT       shift, and go to state 62
    STRING      shift, and go to state 63
    SLBRACKET   shift, and go to state 64
    LBRACKET    shift, and go to state 66
    INTEGER     shift, and go to state 67

    map      go to state 69
    set      go to state 70
    list     go to state 71
    element  go to state 104


State 86

   70 set_tail1: INTEGER .
   80 element: INTEGER .

    SRBRACKET  reduce using rule 70 (set_tail1)
    SRBRACKET  [reduce using rule 80 (element)]
    $default   reduce using rule 70 (set_tail1)


State 87

   76 listbody: list . COMMA list_tail
   84 element: list .

    COMMA  shift, and go to state 105

    $default  reduce using rule 84 (element)


State 88

   46 set: SLBRACKET setbody1 . SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET
   52 setbody1: setbody1 . COMMA set_tail1

    COMMA      shift, and go to state 106
    SRBRACKET  shift, and go to state 107


State 89

   53 setbody1: set_tail1 .

    $default  reduce using rule 53 (setbody1)


State 90

   47 list: SLBRACKET listbody . SRBRACKET

    SRBRACKET  shift, and go to state 108


State 91

   77 listbody: list_tail .

    $default  reduce using rule 77 (listbody)


State 92

   79 list_tail: element .

    $default  reduce using rule 79 (list_tail)


State 93

   51 map_tail: STRING . COLON element

    COLON  shift, and go to state 109


State 94

   45 map: LBRACKET mapbody . RBRACKET
   48 mapbody: mapbody . COMMA map_tail

    COMMA     shift, and go to state 110
    RBRACKET  shift, and go to state 111


State 95

   49 mapbody: map_tail .

    $default  reduce using rule 49 (mapbody)


State 96

   27 if_cond: IFSTATEMENT LPARAN cond RPARAN . LBRACKET component_list RBRACKET
   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN . LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET component RBRACKET

    LBRACKET  shift, and go to state 112


State 97

   32 cond: element booleanopr . IDENTIFIER

    IDENTIFIER  shift, and go to state 113


State 98

   42 for: FOR LPARAN assignment SEMICOLON . cond SEMICOLON assignment RPARAN LBRACKET component_list RBRACKET

    IDENTIFIER  shift, and go to state 61
    FLOAT       shift, and go to state 62
    STRING      shift, and go to state 63
    SLBRACKET   shift, and go to state 64
    BOOLEAN     shift, and go to state 65
    LBRACKET    shift, and go to state 66
    INTEGER     shift, and go to state 67

    $default  reduce using rule 29 (cond)

    cond     go to state 114
    map      go to state 69
    set      go to state 70
    list     go to state 71
    element  go to state 72


State 99

   43 while: WHILE LPARAN cond RPARAN . LBRACKET component_list RBRACKET

    LBRACKET  shift, and go to state 115


State 100

   21 methodcall: IDENTIFIER DOT INCLUDEPROPERTY LPARAN . property_stmt

    STRING  shift, and go to state 116

    property_stmt  go to state 117


State 101

   22 methodcall: CONNECT LPARAN IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RPARAN

    IDENTIFIER  shift, and go to state 118


State 102

   20 property: PROPERTY IDENTIFIER ASSIGNMENT LPARAN . property_stmt RPARAN

    STRING  shift, and go to state 116

    property_stmt  go to state 119


State 103

   33 cond: IDENTIFIER booleanopr IDENTIFIER .

    $default  reduce using rule 33 (cond)


State 104

   31 cond: IDENTIFIER booleanopr element .

    $default  reduce using rule 31 (cond)


State 105

   76 listbody: list COMMA . list_tail

    FLOAT      shift, and go to state 62
    STRING     shift, and go to state 63
    SLBRACKET  shift, and go to state 64
    LBRACKET   shift, and go to state 66
    INTEGER    shift, and go to state 67

    map        go to state 69
    set        go to state 70
    list       go to state 71
    list_tail  go to state 120
    element    go to state 92


State 106

   52 setbody1: setbody1 COMMA . set_tail1

    INTEGER  shift, and go to state 121

    set_tail1  go to state 122


State 107

   46 set: SLBRACKET setbody1 SRBRACKET . SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    SLBRACKET  shift, and go to state 123


State 108

   47 list: SLBRACKET listbody SRBRACKET .

    $default  reduce using rule 47 (list)


State 109

   51 map_tail: STRING COLON . element

    FLOAT      shift, and go to state 62
    STRING     shift, and go to state 63
    SLBRACKET  shift, and go to state 64
    LBRACKET   shift, and go to state 66
    INTEGER    shift, and go to state 67

    map      go to state 69
    set      go to state 70
    list     go to state 71
    element  go to state 124


State 110

   48 mapbody: mapbody COMMA . map_tail

    STRING  shift, and go to state 93

    map_tail  go to state 125


State 111

   45 map: LBRACKET mapbody RBRACKET .

    $default  reduce using rule 45 (map)


State 112

   27 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET . component_list RBRACKET
   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET . component_list RBRACKET ELSESTATEMENT LBRACKET component RBRACKET

    IFSTATEMENT  shift, and go to state 18
    FOR          shift, and go to state 19
    WHILE        shift, and go to state 20
    IDENTIFIER   shift, and go to state 21
    COMMENT      shift, and go to state 22
    CONNECT      shift, and go to state 23
    PROPERTY     shift, and go to state 24
    VARIABLE     shift, and go to state 25
    VERTEX       shift, and go to state 26
    EDGE         shift, and go to state 27

    $default  reduce using rule 23 (assignment)

    component_list            go to state 126
    component                 go to state 29
    vertex_declaration        go to state 30
    edge_declaration          go to state 31
    graph_object_declaration  go to state 32
    property                  go to state 33
    methodcall                go to state 34
    assignment                go to state 35
    conditional               go to state 36
    if_cond                   go to state 37
    ifelse_cond               go to state 38
    loop                      go to state 39
    for                       go to state 40
    while                     go to state 41


State 113

   32 cond: element booleanopr IDENTIFIER .

    $default  reduce using rule 32 (cond)


State 114

   42 for: FOR LPARAN assignment SEMICOLON cond . SEMICOLON assignment RPARAN LBRACKET component_list RBRACKET

    SEMICOLON  shift, and go to state 127


State 115

   43 while: WHILE LPARAN cond RPARAN LBRACKET . component_list RBRACKET

    IFSTATEMENT  shift, and go to state 18
    FOR          shift, and go to state 19
    WHILE        shift, and go to state 20
    IDENTIFIER   shift, and go to state 21
    COMMENT      shift, and go to state 22
    CONNECT      shift, and go to state 23
    PROPERTY     shift, and go to state 24
    VARIABLE     shift, and go to state 25
    VERTEX       shift, and go to state 26
    EDGE         shift, and go to state 27

    $default  reduce using rule 23 (assignment)

    component_list            go to state 128
    component                 go to state 29
    vertex_declaration        go to state 30
    edge_declaration          go to state 31
    graph_object_declaration  go to state 32
    property                  go to state 33
    methodcall                go to state 34
    assignment                go to state 35
    conditional               go to state 36
    if_cond                   go to state 37
    ifelse_cond               go to state 38
    loop                      go to state 39
    for                       go to state 40
    while                     go to state 41


State 116

   44 property_stmt: STRING . COMMA element

    COMMA  shift, and go to state 129


State 117

   21 methodcall: IDENTIFIER DOT INCLUDEPROPERTY LPARAN property_stmt .

    $default  reduce using rule 21 (methodcall)


State 118

   22 methodcall: CONNECT LPARAN IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RPARAN

    COMMA  shift, and go to state 130


State 119

   20 property: PROPERTY IDENTIFIER ASSIGNMENT LPARAN property_stmt . RPARAN

    RPARAN  shift, and go to state 131


State 120

   76 listbody: list COMMA list_tail .

    $default  reduce using rule 76 (listbody)


State 121

   70 set_tail1: INTEGER .

    $default  reduce using rule 70 (set_tail1)


State 122

   52 setbody1: setbody1 COMMA set_tail1 .

    $default  reduce using rule 52 (setbody1)


State 123

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET . setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    FLOAT  shift, and go to state 132

    $default  reduce using rule 57 (setbody2)

    setbody2   go to state 133
    set_tail2  go to state 134


State 124

   51 map_tail: STRING COLON element .

    $default  reduce using rule 51 (map_tail)


State 125

   48 mapbody: mapbody COMMA map_tail .

    $default  reduce using rule 48 (mapbody)


State 126

   27 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list . RBRACKET
   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list . RBRACKET ELSESTATEMENT LBRACKET component RBRACKET

    RBRACKET  shift, and go to state 135


State 127

   42 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON . assignment RPARAN LBRACKET component_list RBRACKET

    VARIABLE  shift, and go to state 25

    $default  reduce using rule 23 (assignment)

    assignment  go to state 136


State 128

   43 while: WHILE LPARAN cond RPARAN LBRACKET component_list . RBRACKET

    RBRACKET  shift, and go to state 137


State 129

   44 property_stmt: STRING COMMA . element

    FLOAT      shift, and go to state 62
    STRING     shift, and go to state 63
    SLBRACKET  shift, and go to state 64
    LBRACKET   shift, and go to state 66
    INTEGER    shift, and go to state 67

    map      go to state 69
    set      go to state 70
    list     go to state 71
    element  go to state 138


State 130

   22 methodcall: CONNECT LPARAN IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RPARAN

    IDENTIFIER  shift, and go to state 139


State 131

   20 property: PROPERTY IDENTIFIER ASSIGNMENT LPARAN property_stmt RPARAN .

    $default  reduce using rule 20 (property)


State 132

   71 set_tail2: FLOAT .

    $default  reduce using rule 71 (set_tail2)


State 133

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 . SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET
   55 setbody2: setbody2 . COMMA set_tail2

    COMMA      shift, and go to state 140
    SRBRACKET  shift, and go to state 141


State 134

   56 setbody2: set_tail2 .

    $default  reduce using rule 56 (setbody2)


State 135

   27 if_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET .
   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET . ELSESTATEMENT LBRACKET component RBRACKET

    ELSESTATEMENT  shift, and go to state 142

    $default  reduce using rule 27 (if_cond)


State 136

   42 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment . RPARAN LBRACKET component_list RBRACKET

    RPARAN  shift, and go to state 143


State 137

   43 while: WHILE LPARAN cond RPARAN LBRACKET component_list RBRACKET .

    $default  reduce using rule 43 (while)


State 138

   44 property_stmt: STRING COMMA element .

    $default  reduce using rule 44 (property_stmt)


State 139

   22 methodcall: CONNECT LPARAN IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RPARAN

    RPARAN  shift, and go to state 144


State 140

   55 setbody2: setbody2 COMMA . set_tail2

    FLOAT  shift, and go to state 132

    set_tail2  go to state 145


State 141

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET . SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    SLBRACKET  shift, and go to state 146


State 142

   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT . LBRACKET component RBRACKET

    LBRACKET  shift, and go to state 147


State 143

   42 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN . LBRACKET component_list RBRACKET

    LBRACKET  shift, and go to state 148


State 144

   22 methodcall: CONNECT LPARAN IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RPARAN .

    $default  reduce using rule 22 (methodcall)


State 145

   55 setbody2: setbody2 COMMA set_tail2 .

    $default  reduce using rule 55 (setbody2)


State 146

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET . setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    STRING  shift, and go to state 149

    $default  reduce using rule 60 (setbody3)

    setbody3   go to state 150
    set_tail3  go to state 151


State 147

   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET . component RBRACKET

    IFSTATEMENT  shift, and go to state 18
    FOR          shift, and go to state 19
    WHILE        shift, and go to state 20
    IDENTIFIER   shift, and go to state 21
    COMMENT      shift, and go to state 22
    CONNECT      shift, and go to state 23
    PROPERTY     shift, and go to state 24
    VARIABLE     shift, and go to state 25
    VERTEX       shift, and go to state 26
    EDGE         shift, and go to state 27

    $default  reduce using rule 23 (assignment)

    component                 go to state 152
    vertex_declaration        go to state 30
    edge_declaration          go to state 31
    graph_object_declaration  go to state 32
    property                  go to state 33
    methodcall                go to state 34
    assignment                go to state 35
    conditional               go to state 36
    if_cond                   go to state 37
    ifelse_cond               go to state 38
    loop                      go to state 39
    for                       go to state 40
    while                     go to state 41


State 148

   42 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET . component_list RBRACKET

    IFSTATEMENT  shift, and go to state 18
    FOR          shift, and go to state 19
    WHILE        shift, and go to state 20
    IDENTIFIER   shift, and go to state 21
    COMMENT      shift, and go to state 22
    CONNECT      shift, and go to state 23
    PROPERTY     shift, and go to state 24
    VARIABLE     shift, and go to state 25
    VERTEX       shift, and go to state 26
    EDGE         shift, and go to state 27

    $default  reduce using rule 23 (assignment)

    component_list            go to state 153
    component                 go to state 29
    vertex_declaration        go to state 30
    edge_declaration          go to state 31
    graph_object_declaration  go to state 32
    property                  go to state 33
    methodcall                go to state 34
    assignment                go to state 35
    conditional               go to state 36
    if_cond                   go to state 37
    ifelse_cond               go to state 38
    loop                      go to state 39
    for                       go to state 40
    while                     go to state 41


State 149

   72 set_tail3: STRING .

    $default  reduce using rule 72 (set_tail3)


State 150

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 . SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET
   58 setbody3: setbody3 . COMMA set_tail3

    COMMA      shift, and go to state 154
    SRBRACKET  shift, and go to state 155


State 151

   59 setbody3: set_tail3 .

    $default  reduce using rule 59 (setbody3)


State 152

   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET component . RBRACKET

    RBRACKET  shift, and go to state 156


State 153

   42 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET component_list . RBRACKET

    RBRACKET  shift, and go to state 157


State 154

   58 setbody3: setbody3 COMMA . set_tail3

    STRING  shift, and go to state 149

    set_tail3  go to state 158


State 155

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET . SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    SLBRACKET  shift, and go to state 159


State 156

   28 ifelse_cond: IFSTATEMENT LPARAN cond RPARAN LBRACKET component_list RBRACKET ELSESTATEMENT LBRACKET component RBRACKET .

    $default  reduce using rule 28 (ifelse_cond)


State 157

   42 for: FOR LPARAN assignment SEMICOLON cond SEMICOLON assignment RPARAN LBRACKET component_list RBRACKET .

    $default  reduce using rule 42 (for)


State 158

   58 setbody3: setbody3 COMMA set_tail3 .

    $default  reduce using rule 58 (setbody3)


State 159

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET . setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    SLBRACKET  shift, and go to state 160

    $default  reduce using rule 63 (setbody4)

    set        go to state 161
    setbody4   go to state 162
    set_tail4  go to state 163


State 160

   46 set: SLBRACKET . setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    INTEGER  shift, and go to state 121

    $default  reduce using rule 54 (setbody1)

    setbody1   go to state 88
    set_tail1  go to state 89


State 161

   73 set_tail4: set .

    $default  reduce using rule 73 (set_tail4)


State 162

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 . SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET
   61 setbody4: setbody4 . COMMA set_tail4

    COMMA      shift, and go to state 164
    SRBRACKET  shift, and go to state 165


State 163

   62 setbody4: set_tail4 .

    $default  reduce using rule 62 (setbody4)


State 164

   61 setbody4: setbody4 COMMA . set_tail4

    SLBRACKET  shift, and go to state 160

    set        go to state 161
    set_tail4  go to state 166


State 165

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET . SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    SLBRACKET  shift, and go to state 167


State 166

   61 setbody4: setbody4 COMMA set_tail4 .

    $default  reduce using rule 61 (setbody4)


State 167

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET . setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET

    LBRACKET  shift, and go to state 66

    $default  reduce using rule 66 (setbody5)

    map        go to state 168
    setbody5   go to state 169
    set_tail5  go to state 170


State 168

   74 set_tail5: map .

    $default  reduce using rule 74 (set_tail5)


State 169

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 . SRBRACKET SLBRACKET setbody6 SRBRACKET
   64 setbody5: setbody5 . COMMA set_tail5

    COMMA      shift, and go to state 171
    SRBRACKET  shift, and go to state 172


State 170

   65 setbody5: set_tail5 .

    $default  reduce using rule 65 (setbody5)


State 171

   64 setbody5: setbody5 COMMA . set_tail5

    LBRACKET  shift, and go to state 66

    map        go to state 168
    set_tail5  go to state 173


State 172

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET . SLBRACKET setbody6 SRBRACKET

    SLBRACKET  shift, and go to state 174


State 173

   64 setbody5: setbody5 COMMA set_tail5 .

    $default  reduce using rule 64 (setbody5)


State 174

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET . setbody6 SRBRACKET

    SLBRACKET  shift, and go to state 175

    $default  reduce using rule 69 (setbody6)

    list       go to state 176
    setbody6   go to state 177
    set_tail6  go to state 178


State 175

   47 list: SLBRACKET . listbody SRBRACKET

    FLOAT      shift, and go to state 62
    STRING     shift, and go to state 63
    SLBRACKET  shift, and go to state 64
    LBRACKET   shift, and go to state 66
    INTEGER    shift, and go to state 67

    $default  reduce using rule 78 (listbody)

    map        go to state 69
    set        go to state 70
    list       go to state 87
    listbody   go to state 90
    list_tail  go to state 91
    element    go to state 92


State 176

   75 set_tail6: list .

    $default  reduce using rule 75 (set_tail6)


State 177

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 . SRBRACKET
   67 setbody6: setbody6 . COMMA set_tail6

    COMMA      shift, and go to state 179
    SRBRACKET  shift, and go to state 180


State 178

   68 setbody6: set_tail6 .

    $default  reduce using rule 68 (setbody6)


State 179

   67 setbody6: setbody6 COMMA . set_tail6

    SLBRACKET  shift, and go to state 175

    list       go to state 176
    set_tail6  go to state 181


State 180

   46 set: SLBRACKET setbody1 SRBRACKET SLBRACKET setbody2 SRBRACKET SLBRACKET setbody3 SRBRACKET SLBRACKET setbody4 SRBRACKET SLBRACKET setbody5 SRBRACKET SLBRACKET setbody6 SRBRACKET .

    $default  reduce using rule 46 (set)


State 181

   67 setbody6: setbody6 COMMA set_tail6 .

    $default  reduce using rule 67 (setbody6)
